name: Automated Test Build (Server Mode)

on:
  push:
    branches: [ "server" ]
  pull_request:
    branches: [ "server" ]

jobs:
  build-windows:
    strategy:
      fail-fast: false
      matrix:
        name:
          - windows
          - windows-x64
          - windows-ygopro2-ai-server
          - windows-mdpro2-server
          - windows-mdpro3-server
#          - windows-2025
        include:
          - name: windows
            os: windows-2022
            vs: vs2022
            solution: ygopro.exe
          - name: windows-x64
            os: windows-2022
            vs: vs2022
            solution: ygopro.exe
            x64: true
#          - name: windows-2025
#            os: windows-2025
#            vs: vs2025 # to be enabled after the release of Visual Studio 2025
          - name: windows-ygopro2-ai-server
            os: windows-2022
            vs: vs2022
            x64: true
            solution: AI.Server.exe
            ygopro2: true
          - name: windows-mdpro2-server
            os: windows-2022
            vs: vs2022
            x64: true
            solution: ygoserver.dll
            mdpro2: true
          - name: windows-mdpro3-server
            os: windows-2022
            vs: vs2022
            x64: true
            solution: ygoserver.dll
            mdpro3: true

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository with submodules
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: true

    - name: Update submodules
      run: |
        cd ocgcore
        git checkout master
        git pull origin master
        cd ..
#        cd script
#        git checkout master
#        git pull origin master
#        cd ..

    - name: Download premake
      id: premake
      uses: mercury233/action-cache-download-file@v1.0.0
      with:
        url: https://github.com/premake/premake-core/releases/download/v5.0.0-beta6/premake-5.0.0-beta6-windows.zip
        filename: premake5.zip

    - name: Extract premake
      run: |
        7z x ${{ steps.premake.outputs.filepath }}

    - name: Download libevent
      id: libevent
      uses: mercury233/action-cache-download-file@v1.0.0
      with:
        url: https://github.com/libevent/libevent/releases/download/release-2.0.22-stable/libevent-2.0.22-stable.tar.gz
        filename: libevent.tar.gz

    - name: Extract libevent
      run: |
        tar xf ${{ steps.libevent.outputs.filepath }}
        move libevent-2.0.22-stable event

    - name: Download lua
      id: lua
      uses: mercury233/action-cache-download-file@v1.0.0
      with:
        url: https://www.lua.org/ftp/lua-5.4.7.tar.gz

    - name: Extract lua
      run: |
        tar xf ${{ steps.lua.outputs.filepath }}
        move lua-5.4.7 lua

    - name: Download sqlite
      id: sqlite
      uses: mercury233/action-cache-download-file@v1.0.0
      with:
        url: https://www.sqlite.org/2025/sqlite-amalgamation-3490100.zip

    - name: Extract sqlite
      run: |
        7z x ${{ steps.sqlite.outputs.filepath }}
        move sqlite-amalgamation-3490100 sqlite3

    - name: Download irrlicht
      if: matrix.ygopro2 == true || matrix.mdpro2 == true || matrix.mdpro3 == true
      run: |
        git clone --depth=1 https://github.com/mercury233/irrlicht

    - name: Copy premake files
      run: |
        xcopy /E premake\* .
        xcopy /E resource\* .

    - name: Use premake to generate Visual Studio solution
      run: |
        .\premake5.exe ${{ matrix.vs }} ${{ matrix.ygopro2 && '--server-pro2-support' || '' }} ${{ matrix.mdpro3 && '--server-pro3-support --log-in-chat' || '' }} ${{ matrix.mdpro2 && '--server-pro3-support --log-in-chat --server-pro2-support' || '' }}

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Build solution
      run: |
        MSBuild.exe build\YGOPro.sln /m /p:Configuration=Release /p:Platform=${{ matrix.x64 && 'x64' || 'Win32' }} /p:OutDir=../bin/release/${{ matrix.name }}/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: YGOPro-Server-${{ matrix.name }}
        path: |
          bin/release/${{ matrix.name }}/${{ matrix.solution }}

  publish:
    needs: [build-windows]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Delete old tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch --tags
          git tag -d server-latest || true
          git push origin :refs/tags/server-latest || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: YGOPro-Server-*

      - name: Debug files
        run: |
          ls -laR artifacts

      - name: Prepare Release
        uses: softprops/action-gh-release@v2.3.1
        continue-on-error: true
        with:
          tag_name: server-latest
          make_latest: true

      - name: Publish Release
        uses: softprops/action-gh-release@v2.3.1
        with:
          tag_name: server-latest
          make_latest: true
          files: |
            artifacts/YGOPro-Server-windows/ygopro.exe
            artifacts/YGOPro-Server-windows-x64/ygopro.exe
            artifacts/YGOPro-Server-windows-ygopro2-ai-server/AI.Server.exe
            artifacts/YGOPro-Server-windows-mdpro2-server/ygoserver.dll
            artifacts/YGOPro-Server-windows-mdpro3-server/ygoserver.dll